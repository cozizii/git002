#1. GIT 버젼관리 
	가. 정의 : 1. git의 장점 중 하나는 git 서버없이 로컬 상에서도 모든 작업을 할 수 있다 
	        (오프라인이라도 작업 가능)

		2. Git은 분산 버전 관리 시스템(DVCS)으로 
		   클라이언트에서 원격 저장소의 내용을 통채로 복사해서 작업할 수 있다. 
		   따라서 오프라인에서 작업이 가능하며 원본 저장소에 문제가 생겨도 
		   다른 저장소의 내용으로 복원이 가능하므로 더 안전하다고 볼 수 있다.

#2.  GIT 다운로드
	   https://www.git-scm.com/download/win  (portable로 다운로드받기)


#3.  GIT 사용방법
	가. git 저장소(repository)를 만들기  
	   1. https://github.com/   회원가입		   
	   2.  git repository를 만들기
	
	나. #2에서 다운로드한것 압축풀어 bash  실행
	   1. 로그인
		git config --global user.name "GitHub아이디"?
		git config --global user.email "GitHub email주소"
	   
	   2. 디렉토리만들고 올릴파일 확인
		mkdir ~/MyProject   // 로컬 디렉토리 만들고
		cd ~/myproject       // 디렉토리로 들어가서

	   3. 파일올리기  
		git init            // 깃 명령어를 사용할 수 있는 디렉토리로 만든다.
		git add 화일명.확장자  // 깃 주목 리스트에 화일을 추가하고 or
		git add .           // 이 명령은 현재 디렉토리의 모든 화일을 추가할 수 있다.
		git commit -m “현재형으로 설명” // 커밋해서 스냅샷을 찍는다.
		git remote add origin https://github.com/GitHub아이디/저장소이름.git // 로컬과 원격 저장소를 연결한다.
		git remote -v // 연결상태를 확인한다.
		git push -u origin master
		git push origin master // 깃허브로 푸시한다.

	   3. 파일다운로드
		git clone https://github.com/GitHub아이디/저장소이름.git
	   
	   4. 파일수정후 업로드
		git add .
		git commit -m "메세지"
		git push -u origin master
	   5. 최신파일 받아오기
		git pull 

	   6. bash창 용어
		pwd - 현재 위치
		cd - 체인지 디렉토리 (이동하기)
		  cd c/
		  cd ../ - 한단계 전으로
		ls - 파일 리스트 보기
		ls -altr - 이름, 시간 등등 자세히 볼수 있음
		mkdir folder_name - 메이크 디렉토리(폴더만들기)
